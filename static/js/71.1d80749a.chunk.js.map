{"version":3,"file":"static/js/71.1d80749a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.js","components/views/Cast.js","webpack://goit-react-hw-05-movies/./src/components/ReviewsList/ReviewsList.module.css?071b","components/ReviewsList/ReviewsList.js","components/views/Reviews.js","webpack://goit-react-hw-05-movies/./src/components/CardFilms/CardFilms.module.css?0739","components/CardFilms/CardFilms.js","components/views/MovieDetailsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"CastList_thumb__QIjqR\"};","import s from './CastList.module.css';\nimport defaultFoto from '../../components/defaultImages/defaultFoto.jpg';\n\nfunction CastList({ data }) {\n  return (\n    <>\n      <ul>\n        {data.map(\n          ({ cast_id, original_name, profile_path = `${defaultFoto}` }) => (\n            <li className={s.link} key={cast_id}>\n              <p>{original_name}</p>\n              <div className={s.thumb}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                      : `${defaultFoto}`\n                  }\n                  alt={`${original_name}`}\n                />\n              </div>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n}\n\nexport default CastList;\n","import { useParams } from 'react-router-dom';\nimport { ApiMovieCast } from 'components/ApiService/ApiService';\nimport { useState, useEffect } from 'react';\nimport CastList from 'components/CastList/CastList';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    ApiMovieCast(movieId).then(data => {\n      setCast(data.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length === 0 ? <p>No cast details.</p> : <CastList data={cast} />}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ReviewsList_list__o8e+8\",\"link\":\"ReviewsList_link__W0wJ5\",\"content\":\"ReviewsList_content__wrVr1\"};","import s from './ReviewsList.module.css';\n\nexport default function ReviewsList({ data }) {\n  return (\n    <>\n      <ul className={s.list}>\n        {data.map(({ author, content, id }) => (\n          <li key={id} className={s.link}>\n            {author}\n            <p className={s.content}>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { ApiReviews } from 'components/ApiService/ApiService';\nimport { useState, useEffect } from 'react';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    ApiReviews(movieId).then(data => {\n      setReviews(data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <>\n          <ReviewsList data={reviews} />\n        </>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"CardFilms_thumb__aT42F\",\"container\":\"CardFilms_container__BKjoQ\",\"content\":\"CardFilms_content__CnPPd\",\"text\":\"CardFilms_text__5Y+a9\"};","import s from './CardFilms.module.css';\nimport defaultFoto from '../../components/defaultImages/defaultFoto.jpg';\n\nfunction CardFilms({ cardFilm }) {\n  return (\n    <>\n      {cardFilm && (\n        <>\n          <div className={s.container}>\n            <div className={s.thumb}>\n              <img\n                src={\n                  cardFilm.poster_path\n                    ? `https://image.tmdb.org/t/p/w200/${cardFilm.poster_path}`\n                    : `${defaultFoto}`\n                }\n                alt={`${cardFilm.title}`}\n              />\n            </div>\n            <div className={s.content}>\n              <h1>{cardFilm.title}</h1>\n              <p className={s.text}>\n                User Score : {Math.round(cardFilm.popularity)}\n              </p>\n              <h2>Overview</h2>\n              <p className={s.text}>{cardFilm.overview}</p>\n              <h4>Genres</h4>\n              <p className={s.text}>\n                {cardFilm.genres.map(({ name }) => name).join(' ')}\n              </p>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default CardFilms;\n","import { useParams, Route, Routes, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ApiMovieDetailsPage } from 'components/ApiService/ApiService';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport CardFilms from 'components/CardFilms/CardFilms';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [cardFilm, setCardFilm] = useState(null);\n  const location = useLocation();\n  const fromPath = location.state?.from;\n\n  useEffect(() => {\n    ApiMovieDetailsPage(movieId).then(data => {\n      const { popularity, id, genres, title, poster_path, overview } = data;\n      setCardFilm({\n        popularity,\n        id,\n        genres,\n        title,\n        poster_path,\n        overview,\n      });\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={`${fromPath}`}>Go back</Link>\n      {cardFilm && <CardFilms cardFilm={cardFilm} />}\n      <p>\n        <Link to=\"cast\" state={{ from: fromPath }}>\n          Cast\n        </Link>\n      </p>\n      <p>\n        <Link to=\"reviews\" state={{ from: fromPath }}>\n          Reviews\n        </Link>\n      </p>\n      <hr color=\"#321616\" />\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n}\n"],"names":["data","map","cast_id","original_name","profile_path","defaultFoto","className","s","src","alt","Cast","movieId","useParams","useState","cast","setCast","useEffect","ApiMovieCast","then","length","ReviewsList","author","content","id","Reviews","reviews","setReviews","ApiReviews","results","cardFilm","poster_path","title","Math","round","popularity","overview","genres","name","join","MovieDetailsPage","setCardFilm","fromPath","useLocation","state","from","ApiMovieDetailsPage","to","color","path","element"],"sourceRoot":""}